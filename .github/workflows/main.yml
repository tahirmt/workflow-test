# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        env:
          PULL_REQUEST: ${{ github.event.number }}
        run: |
          echo Hello, world!
          echo "PUll $PULL_REQUEST"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo ${{ github.event.number }}
          echo ${{ github.event.pull_request }}
          echo ${{ github.event.pull_request.html_url }}
          echo ${{ github.event.head_commit.message }}
          echo $(git log -1 --pretty=format:"%s")
          echo $(git log -5 --pretty=format:"%s")
          echo "labels ${{ github.event.pull_request.labels }}"
          
          LABELS=${{ github.event.pull_request.labels }}
          echo "labels count ${#LABELS[@]}"
          
          if [ ${#LABELS[@]} -eq 0 ]; then
              echo "No labels"
          else
              echo "Has some labels"
          fi
          
          REVIEWERS=(${{ github.event.pull_request.requested_reviewers }})
          
          echo "reviewers count ${#REVIEWERS[@]}"

          if [ ${#REVIEWERS[@]} -eq 0 ]; then
              echo "No reviewers"
          else
              echo "Has some reviewers"
              
              for reviewer in "${REVIEWERS[@]}"
              do
                echo "reviewer $reviewer"
                echo "reviewer $reviewer.login"
              done
          fi
          
          echo "ref $GITHUB_REF"
          echo "head ref $GITHUB_HEAD_REF"
          echo "ref 2 ${{ github.ref }}"
          echo "head ref 2 ${{ github.head_ref }}"
        shell: bash
          
      - name: Run ruby
        run: |
          postCommentResult=$(ruby -e '
            require "json"
            require "rubygems"
            require "faraday"

            label_values=${{ github.event.pull_request.labels }}
            puts ${{ github.event.pull_request.labels }}
            unbound_method = Array.instance_method(:length)
            bound_method = unbound_method.bind(label_values)
            
            puts bound_method.call #=> 4
          ')
          echo $postCommentResult
          
          
